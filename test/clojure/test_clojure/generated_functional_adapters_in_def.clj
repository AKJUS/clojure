
(ns clojure.test-clojure.generated-functional-adapters-in-def
  (:use clojure.test)
  (:require [clojure.string :as str])
  (:import (clojure.test AdapterExerciser)))

  (deftest functional-adapters-in-def
           (def exerciser (AdapterExerciser.))
           (def Ladapter (fn [] (long 1)))
           (is (= (.methodL ^AdapterExerciser exerciser Ladapter) 0))
           (def Iadapter (fn [] 1))
           (is (= (.methodI ^AdapterExerciser exerciser Iadapter) 1))
           (def Sadapter (fn [] (short 1)))
           (is (= (.methodS ^AdapterExerciser exerciser Sadapter) 2))
           (def Badapter (fn [] (byte 1)))
           (is (= (.methodB ^AdapterExerciser exerciser Badapter) 3))
           (def Dadapter (fn [] (double 1)))
           (is (= (.methodD ^AdapterExerciser exerciser Dadapter) 4))
           (def Fadapter (fn [] (float 1)))
           (is (= (.methodF ^AdapterExerciser exerciser Fadapter) 5))
           (def Zadapter (fn [] false))
           (is (= (.methodZ ^AdapterExerciser exerciser Zadapter) 6))
           (def Oadapter (fn [] exerciser))
           (is (= (.methodO ^AdapterExerciser exerciser Oadapter) 7))
           (def LLadapter (fn [^long a] (long 1)))
           (is (= (.methodLL ^AdapterExerciser exerciser LLadapter) 8))
           (def DLadapter (fn [^double a] (long 1)))
           (is (= (.methodDL ^AdapterExerciser exerciser DLadapter) 9))
           (def OLadapter (fn [^AdapterExerciser a] (long 1)))
           (is (= (.methodOL ^AdapterExerciser exerciser OLadapter) 10))
           (def LIadapter (fn [^long a] 1))
           (is (= (.methodLI ^AdapterExerciser exerciser LIadapter) 11))
           (def DIadapter (fn [^double a] 1))
           (is (= (.methodDI ^AdapterExerciser exerciser DIadapter) 12))
           (def OIadapter (fn [^AdapterExerciser a] 1))
           (is (= (.methodOI ^AdapterExerciser exerciser OIadapter) 13))
           (def LSadapter (fn [^long a] (short 1)))
           (is (= (.methodLS ^AdapterExerciser exerciser LSadapter) 14))
           (def DSadapter (fn [^double a] (short 1)))
           (is (= (.methodDS ^AdapterExerciser exerciser DSadapter) 15))
           (def OSadapter (fn [^AdapterExerciser a] (short 1)))
           (is (= (.methodOS ^AdapterExerciser exerciser OSadapter) 16))
           (def LBadapter (fn [^long a] (byte 1)))
           (is (= (.methodLB ^AdapterExerciser exerciser LBadapter) 17))
           (def DBadapter (fn [^double a] (byte 1)))
           (is (= (.methodDB ^AdapterExerciser exerciser DBadapter) 18))
           (def OBadapter (fn [^AdapterExerciser a] (byte 1)))
           (is (= (.methodOB ^AdapterExerciser exerciser OBadapter) 19))
           (def LDadapter (fn [^long a] (double 1)))
           (is (= (.methodLD ^AdapterExerciser exerciser LDadapter) 20))
           (def DDadapter (fn [^double a] (double 1)))
           (is (= (.methodDD ^AdapterExerciser exerciser DDadapter) 21))
           (def ODadapter (fn [^AdapterExerciser a] (double 1)))
           (is (= (.methodOD ^AdapterExerciser exerciser ODadapter) 22))
           (def LFadapter (fn [^long a] (float 1)))
           (is (= (.methodLF ^AdapterExerciser exerciser LFadapter) 23))
           (def DFadapter (fn [^double a] (float 1)))
           (is (= (.methodDF ^AdapterExerciser exerciser DFadapter) 24))
           (def OFadapter (fn [^AdapterExerciser a] (float 1)))
           (is (= (.methodOF ^AdapterExerciser exerciser OFadapter) 25))
           (def LZadapter (fn [^long a] false))
           (is (= (.methodLZ ^AdapterExerciser exerciser LZadapter) 26))
           (def DZadapter (fn [^double a] false))
           (is (= (.methodDZ ^AdapterExerciser exerciser DZadapter) 27))
           (def OZadapter (fn [^AdapterExerciser a] false))
           (is (= (.methodOZ ^AdapterExerciser exerciser OZadapter) 28))
           (def LOadapter (fn [^long a] exerciser))
           (is (= (.methodLO ^AdapterExerciser exerciser LOadapter) 29))
           (def DOadapter (fn [^double a] exerciser))
           (is (= (.methodDO ^AdapterExerciser exerciser DOadapter) 30))
           (def OOadapter (fn [^AdapterExerciser a] exerciser))
           (is (= (.methodOO ^AdapterExerciser exerciser OOadapter) 31))
           (def LLLadapter (fn [^long a ^long b] (long 1)))
           (is (= (.methodLLL ^AdapterExerciser exerciser LLLadapter) 32))
           (def LOLadapter (fn [^long a ^AdapterExerciser b] (long 1)))
           (is (= (.methodLOL ^AdapterExerciser exerciser LOLadapter) 33))
           (def OLLadapter (fn [^AdapterExerciser a ^long b] (long 1)))
           (is (= (.methodOLL ^AdapterExerciser exerciser OLLadapter) 34))
           (def DDLadapter (fn [^double a ^double b] (long 1)))
           (is (= (.methodDDL ^AdapterExerciser exerciser DDLadapter) 35))
           (def LDLadapter (fn [^long a ^double b] (long 1)))
           (is (= (.methodLDL ^AdapterExerciser exerciser LDLadapter) 36))
           (def DLLadapter (fn [^double a ^long b] (long 1)))
           (is (= (.methodDLL ^AdapterExerciser exerciser DLLadapter) 37))
           (def OOLadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (long 1)))
           (is (= (.methodOOL ^AdapterExerciser exerciser OOLadapter) 38))
           (def ODLadapter (fn [^AdapterExerciser a ^double b] (long 1)))
           (is (= (.methodODL ^AdapterExerciser exerciser ODLadapter) 39))
           (def DOLadapter (fn [^double a ^AdapterExerciser b] (long 1)))
           (is (= (.methodDOL ^AdapterExerciser exerciser DOLadapter) 40))
           (def LLIadapter (fn [^long a ^long b] 1))
           (is (= (.methodLLI ^AdapterExerciser exerciser LLIadapter) 41))
           (def LOIadapter (fn [^long a ^AdapterExerciser b] 1))
           (is (= (.methodLOI ^AdapterExerciser exerciser LOIadapter) 42))
           (def OLIadapter (fn [^AdapterExerciser a ^long b] 1))
           (is (= (.methodOLI ^AdapterExerciser exerciser OLIadapter) 43))
           (def DDIadapter (fn [^double a ^double b] 1))
           (is (= (.methodDDI ^AdapterExerciser exerciser DDIadapter) 44))
           (def LDIadapter (fn [^long a ^double b] 1))
           (is (= (.methodLDI ^AdapterExerciser exerciser LDIadapter) 45))
           (def DLIadapter (fn [^double a ^long b] 1))
           (is (= (.methodDLI ^AdapterExerciser exerciser DLIadapter) 46))
           (def OOIadapter (fn [^AdapterExerciser a ^AdapterExerciser b] 1))
           (is (= (.methodOOI ^AdapterExerciser exerciser OOIadapter) 47))
           (def ODIadapter (fn [^AdapterExerciser a ^double b] 1))
           (is (= (.methodODI ^AdapterExerciser exerciser ODIadapter) 48))
           (def DOIadapter (fn [^double a ^AdapterExerciser b] 1))
           (is (= (.methodDOI ^AdapterExerciser exerciser DOIadapter) 49))
           (def LLSadapter (fn [^long a ^long b] (short 1)))
           (is (= (.methodLLS ^AdapterExerciser exerciser LLSadapter) 50))
           (def LOSadapter (fn [^long a ^AdapterExerciser b] (short 1)))
           (is (= (.methodLOS ^AdapterExerciser exerciser LOSadapter) 51))
           (def OLSadapter (fn [^AdapterExerciser a ^long b] (short 1)))
           (is (= (.methodOLS ^AdapterExerciser exerciser OLSadapter) 52))
           (def DDSadapter (fn [^double a ^double b] (short 1)))
           (is (= (.methodDDS ^AdapterExerciser exerciser DDSadapter) 53))
           (def LDSadapter (fn [^long a ^double b] (short 1)))
           (is (= (.methodLDS ^AdapterExerciser exerciser LDSadapter) 54))
           (def DLSadapter (fn [^double a ^long b] (short 1)))
           (is (= (.methodDLS ^AdapterExerciser exerciser DLSadapter) 55))
           (def OOSadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (short 1)))
           (is (= (.methodOOS ^AdapterExerciser exerciser OOSadapter) 56))
           (def ODSadapter (fn [^AdapterExerciser a ^double b] (short 1)))
           (is (= (.methodODS ^AdapterExerciser exerciser ODSadapter) 57))
           (def DOSadapter (fn [^double a ^AdapterExerciser b] (short 1)))
           (is (= (.methodDOS ^AdapterExerciser exerciser DOSadapter) 58))
           (def LLBadapter (fn [^long a ^long b] (byte 1)))
           (is (= (.methodLLB ^AdapterExerciser exerciser LLBadapter) 59))
           (def LOBadapter (fn [^long a ^AdapterExerciser b] (byte 1)))
           (is (= (.methodLOB ^AdapterExerciser exerciser LOBadapter) 60))
           (def OLBadapter (fn [^AdapterExerciser a ^long b] (byte 1)))
           (is (= (.methodOLB ^AdapterExerciser exerciser OLBadapter) 61))
           (def DDBadapter (fn [^double a ^double b] (byte 1)))
           (is (= (.methodDDB ^AdapterExerciser exerciser DDBadapter) 62))
           (def LDBadapter (fn [^long a ^double b] (byte 1)))
           (is (= (.methodLDB ^AdapterExerciser exerciser LDBadapter) 63))
           (def DLBadapter (fn [^double a ^long b] (byte 1)))
           (is (= (.methodDLB ^AdapterExerciser exerciser DLBadapter) 64))
           (def OOBadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (byte 1)))
           (is (= (.methodOOB ^AdapterExerciser exerciser OOBadapter) 65))
           (def ODBadapter (fn [^AdapterExerciser a ^double b] (byte 1)))
           (is (= (.methodODB ^AdapterExerciser exerciser ODBadapter) 66))
           (def DOBadapter (fn [^double a ^AdapterExerciser b] (byte 1)))
           (is (= (.methodDOB ^AdapterExerciser exerciser DOBadapter) 67))
           (def LLDadapter (fn [^long a ^long b] (double 1)))
           (is (= (.methodLLD ^AdapterExerciser exerciser LLDadapter) 68))
           (def LODadapter (fn [^long a ^AdapterExerciser b] (double 1)))
           (is (= (.methodLOD ^AdapterExerciser exerciser LODadapter) 69))
           (def OLDadapter (fn [^AdapterExerciser a ^long b] (double 1)))
           (is (= (.methodOLD ^AdapterExerciser exerciser OLDadapter) 70))
           (def DDDadapter (fn [^double a ^double b] (double 1)))
           (is (= (.methodDDD ^AdapterExerciser exerciser DDDadapter) 71))
           (def LDDadapter (fn [^long a ^double b] (double 1)))
           (is (= (.methodLDD ^AdapterExerciser exerciser LDDadapter) 72))
           (def DLDadapter (fn [^double a ^long b] (double 1)))
           (is (= (.methodDLD ^AdapterExerciser exerciser DLDadapter) 73))
           (def OODadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (double 1)))
           (is (= (.methodOOD ^AdapterExerciser exerciser OODadapter) 74))
           (def ODDadapter (fn [^AdapterExerciser a ^double b] (double 1)))
           (is (= (.methodODD ^AdapterExerciser exerciser ODDadapter) 75))
           (def DODadapter (fn [^double a ^AdapterExerciser b] (double 1)))
           (is (= (.methodDOD ^AdapterExerciser exerciser DODadapter) 76))
           (def LLFadapter (fn [^long a ^long b] (float 1)))
           (is (= (.methodLLF ^AdapterExerciser exerciser LLFadapter) 77))
           (def LOFadapter (fn [^long a ^AdapterExerciser b] (float 1)))
           (is (= (.methodLOF ^AdapterExerciser exerciser LOFadapter) 78))
           (def OLFadapter (fn [^AdapterExerciser a ^long b] (float 1)))
           (is (= (.methodOLF ^AdapterExerciser exerciser OLFadapter) 79))
           (def DDFadapter (fn [^double a ^double b] (float 1)))
           (is (= (.methodDDF ^AdapterExerciser exerciser DDFadapter) 80))
           (def LDFadapter (fn [^long a ^double b] (float 1)))
           (is (= (.methodLDF ^AdapterExerciser exerciser LDFadapter) 81))
           (def DLFadapter (fn [^double a ^long b] (float 1)))
           (is (= (.methodDLF ^AdapterExerciser exerciser DLFadapter) 82))
           (def OOFadapter (fn [^AdapterExerciser a ^AdapterExerciser b] (float 1)))
           (is (= (.methodOOF ^AdapterExerciser exerciser OOFadapter) 83))
           (def ODFadapter (fn [^AdapterExerciser a ^double b] (float 1)))
           (is (= (.methodODF ^AdapterExerciser exerciser ODFadapter) 84))
           (def DOFadapter (fn [^double a ^AdapterExerciser b] (float 1)))
           (is (= (.methodDOF ^AdapterExerciser exerciser DOFadapter) 85))
           (def LLZadapter (fn [^long a ^long b] false))
           (is (= (.methodLLZ ^AdapterExerciser exerciser LLZadapter) 86))
           (def LOZadapter (fn [^long a ^AdapterExerciser b] false))
           (is (= (.methodLOZ ^AdapterExerciser exerciser LOZadapter) 87))
           (def OLZadapter (fn [^AdapterExerciser a ^long b] false))
           (is (= (.methodOLZ ^AdapterExerciser exerciser OLZadapter) 88))
           (def DDZadapter (fn [^double a ^double b] false))
           (is (= (.methodDDZ ^AdapterExerciser exerciser DDZadapter) 89))
           (def LDZadapter (fn [^long a ^double b] false))
           (is (= (.methodLDZ ^AdapterExerciser exerciser LDZadapter) 90))
           (def DLZadapter (fn [^double a ^long b] false))
           (is (= (.methodDLZ ^AdapterExerciser exerciser DLZadapter) 91))
           (def OOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b] false))
           (is (= (.methodOOZ ^AdapterExerciser exerciser OOZadapter) 92))
           (def ODZadapter (fn [^AdapterExerciser a ^double b] false))
           (is (= (.methodODZ ^AdapterExerciser exerciser ODZadapter) 93))
           (def DOZadapter (fn [^double a ^AdapterExerciser b] false))
           (is (= (.methodDOZ ^AdapterExerciser exerciser DOZadapter) 94))
           (def LLOadapter (fn [^long a ^long b] exerciser))
           (is (= (.methodLLO ^AdapterExerciser exerciser LLOadapter) 95))
           (def LOOadapter (fn [^long a ^AdapterExerciser b] exerciser))
           (is (= (.methodLOO ^AdapterExerciser exerciser LOOadapter) 96))
           (def OLOadapter (fn [^AdapterExerciser a ^long b] exerciser))
           (is (= (.methodOLO ^AdapterExerciser exerciser OLOadapter) 97))
           (def DDOadapter (fn [^double a ^double b] exerciser))
           (is (= (.methodDDO ^AdapterExerciser exerciser DDOadapter) 98))
           (def LDOadapter (fn [^long a ^double b] exerciser))
           (is (= (.methodLDO ^AdapterExerciser exerciser LDOadapter) 99))
           (def DLOadapter (fn [^double a ^long b] exerciser))
           (is (= (.methodDLO ^AdapterExerciser exerciser DLOadapter) 100))
           (def OOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b] exerciser))
           (is (= (.methodOOO ^AdapterExerciser exerciser OOOadapter) 101))
           (def ODOadapter (fn [^AdapterExerciser a ^double b] exerciser))
           (is (= (.methodODO ^AdapterExerciser exerciser ODOadapter) 102))
           (def DOOadapter (fn [^double a ^AdapterExerciser b] exerciser))
           (is (= (.methodDOO ^AdapterExerciser exerciser DOOadapter) 103))
           (def OOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c] false))
           (is (= (.methodOOOZ ^AdapterExerciser exerciser OOOZadapter) 104))
           (def OOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c] exerciser))
           (is (= (.methodOOOO ^AdapterExerciser exerciser OOOOadapter) 105))
           (def OOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d] false))
           (is (= (.methodOOOOZ ^AdapterExerciser exerciser OOOOZadapter) 106))
           (def OOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d] exerciser))
           (is (= (.methodOOOOO ^AdapterExerciser exerciser OOOOOadapter) 107))
           (def OOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e] false))
           (is (= (.methodOOOOOZ ^AdapterExerciser exerciser OOOOOZadapter) 108))
           (def OOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e] exerciser))
           (is (= (.methodOOOOOO ^AdapterExerciser exerciser OOOOOOadapter) 109))
           (def OOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f] false))
           (is (= (.methodOOOOOOZ ^AdapterExerciser exerciser OOOOOOZadapter) 110))
           (def OOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f] exerciser))
           (is (= (.methodOOOOOOO ^AdapterExerciser exerciser OOOOOOOadapter) 111))
           (def OOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g] false))
           (is (= (.methodOOOOOOOZ ^AdapterExerciser exerciser OOOOOOOZadapter) 112))
           (def OOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g] exerciser))
           (is (= (.methodOOOOOOOO ^AdapterExerciser exerciser OOOOOOOOadapter) 113))
           (def OOOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h] false))
           (is (= (.methodOOOOOOOOZ ^AdapterExerciser exerciser OOOOOOOOZadapter) 114))
           (def OOOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h] exerciser))
           (is (= (.methodOOOOOOOOO ^AdapterExerciser exerciser OOOOOOOOOadapter) 115))
           (def OOOOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i] false))
           (is (= (.methodOOOOOOOOOZ ^AdapterExerciser exerciser OOOOOOOOOZadapter) 116))
           (def OOOOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i] exerciser))
           (is (= (.methodOOOOOOOOOO ^AdapterExerciser exerciser OOOOOOOOOOadapter) 117))
           (def OOOOOOOOOOZadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i ^AdapterExerciser j] false))
           (is (= (.methodOOOOOOOOOOZ ^AdapterExerciser exerciser OOOOOOOOOOZadapter) 118))
           (def OOOOOOOOOOOadapter (fn [^AdapterExerciser a ^AdapterExerciser b ^AdapterExerciser c ^AdapterExerciser d ^AdapterExerciser e ^AdapterExerciser f ^AdapterExerciser g ^AdapterExerciser h ^AdapterExerciser i ^AdapterExerciser j] exerciser))
           (is (= (.methodOOOOOOOOOOO ^AdapterExerciser exerciser OOOOOOOOOOOadapter) 119)))